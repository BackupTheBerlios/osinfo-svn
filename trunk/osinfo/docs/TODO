FEATURES and FIXES for 0.3:
--------------------------

*	custom <value> xml tags, <value name="foo">bar</value>
?	sensors output depends on LC_*, remove [:punct:] dependency
*	info message from corresponding modules (eg hdd) when a program is missing (smartctl)
*	complete xsl/html support
*	checker to see if netcat is installed
	check for netcat binary in daemon mode!
*	--checkdeps switch
*	don't leave osinfo.XXXXXX and <hostname>.x?? files around!
*	apache interface requires osinfo cgi
*	include module pci


FEATURES and FIXES for 0.4:
----------------

*	hdd: part mp size free free% free_inodes fs
*	fix: user/root problem
*	su_modules - run only su modules
*	std_modules - non-su modules
*	mod_hdd: scan_md
*	gentoo: total system build time ;-)
*	mod_cpu: stepping
*	automatic output filename based on modules and timestamp
*	top 10 memory hoggers :)
*	pdf output sheet of the profile
*	osinfo hdd /dev/sda --report --pdf

FEATURES FOR 0.5:
----------------

*	integrate udev ruleset more tightly
*	osinfo as a frontend for custom udev rules?


LATER FEATURES:
--------------

*	general usb device detection: cameras etc
*	hal/dbus stuff
*	window manager version


BUGS:
-----

*	mod_applications: /dev/mem: Permission denied on RH9


GENERAL NOTES:
-------------

*	"svn revert somefile" to revert uncommited changes
	"svn up -r revnr somename" to revert to a specific version

*	"xmllint --valid osinfo.xml" to check if the xml output is valid
	against the DTD

*	"xsltproc osinfo.xsl osinfo.xml > osinfo.html" to generate the HTML


PROGRAMMING TIPS:
----------------

*	there are at least two methods to parse an alphabetical seq number:
	 awk '{ ind=index("ABCDEFGHIJKLMNOPQRSTUVWXYZ", toupper($0)); print ind; }' <<< $'b\no\ns\na\ni'
	 NUM=$(( $(echo -n 'A' | tr 'a-z' 'A-Z' | od -A n -t u1) - 64)); echo $NUM
	 the latter works by subtracting the ASCII offset (64) from the uppercase character.

*	to use tab as a field separator in awk:
	 awk $'-F\t' {}

*	instead of awk, read can sometimes be used:
	fdisk -l | read a b c d e partition; echo "$partition"

*	Get tabsize dynamically: "tput it"

*	sort a file reversely with `tac`, or 
	<stdin> | grep -n . | sort -rn | cut -d':' -f 2 | <stdout>
