#!/bin/bash
#######
# xml.functions - shared functions for XML output.
# Copyright (C) 2006 Arvid Norlander
# Copyright (C) 2006 Mikael Lammentausta
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#     * this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#     * notice, this list of conditions and the following disclaimer in the
#     * documentation and/or other materials provided with the distribution.
#     * Neither the name of the <ORGANIZATION> nor the names of its
#     * contributors may be used to endorse or promote products derived from
#     * this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#######

# Simple start tag
# Parameters:
#  1  string  Name of tag
function xml_tag_start () {
	echo "<${1}>"
}

# Simple end tag
# Parameters:
#  1  string  Name of tag
function xml_tag_stop () {
	echo "</${1}>"
}

# Simple start-end tag
# Parameters:
#  1  string  Name of tag
function xml_tag_startstop () {
	echo "<${1} />"
}

# Unclosed tag
# Parameters:
#  1  string  Name of tag
function xml_opentag_start () {
	echo -n "<${1}"
}

# Tag with a parameter
#  1  string  name of parameter  
#  2  *       Value
function xml_param_tag () {
	echo "<${1}=\"${2}\">"
}


# Paramter for unclosed tag
# Parameters:
#  1  string  Name of parameter
#  2  *       Value
function xml_opentag_param () {
	echo -n " ${1}=\"${2}\""
}

# Close unclosed tag
# Parameters:
#  1  integer  Type of close
#                1            = >
#                anthing else = />
function xml_opentag_stop () {
	if [[ "$1" -eq 1 ]]; then
		echo ">"
	else
		echo "/>"
	fi
}

# Prints XML headder
# Parameters:
#  1  string  DTD Name
#  2  string  DTD Type
#               Can be SYSTEM or PUBLIC
#  3  string  DTD URL
function xml_doc_start () {
	echo '<?xml version="1.0" encoding="" ?>'
	echo "<!DOCTYPE ${1} ${2} \"${3}\">"
}

# attribute start tag
# Parameters:
#  1  string  attribute name
#  2  string  attribute code
function xml_attribute_start () {
	echo "<attribute name=\"${1}\" code=\"${2}\">"
}

# attribute end tag
function xml_attribute_stop () {
	xml_tag_stop "attribute"
}

# Simple value tag
# Parameters:
#  1  string  data
function xml_value () {
	echo "<value>${1}</value>"
}
