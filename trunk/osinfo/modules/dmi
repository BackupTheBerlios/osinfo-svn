#######################
# DMI / OEM INFORMATION
#
# this module works as a replacement for module_oem. this is faster,
# as it doesn't scan hardware. look below for excerpt from 'man dmidecode':
#
# dmidecode  is  a  tool  for dumping a computer's DMI (some say SMBIOS) table
# contents in a human-readable format.
# This table contains a description of the system's hardware components,
# as well as other useful pieces of information  such  as  serial
# numbers and BIOS revision. Thanks to this table, you can retrieve this
# information without having to probe for the actual hardware.  While this
# is a good point in terms of report speed and safeness,  this also makes
# the presented information possibly unreliable.
Module_dmi() {
	local moduleName="DMI information"
	module_header "${moduleName}"

	if CheckReq_dmidecode && CheckReq_root; then
		# allocate the temp files
		dmi_info="$(mktemp /tmp/osinfo.XXXXXX)"
		dmi_tmp="$(mktemp /tmp/osinfo.XXXXXX)"
		dmidecode > "$dmi_info"
		TempFiles=("${TempFiles[@]}" "$dmi_info" "$dmi_tmp")

		# the interesting handles:
		# 0x0000 or 0x0001 = 'BIOS Information'
		# 0x0001 or 0x0002 = 'System Information'
		# 0x0002 or 0x0003 = 'Base Board Information'
		# 0x0003 or 0x0004 = 'Chassis Information'
		# 0x0004 or 0x0005 = 'Processor Information'
		# .... and more

		local HANDLES="BIOS information,System information,Base Board information,Chassis information"

		# the following loop extracts the data under the nodes variable.

		# (1) get the line number where the description occurs
		# (2) get the line number of the next 'node id'
		# (3) everything in between those lines contains interesting data


		# IFS need to be changed because the values are separated by newline
		local IFS_bak="$IFS" value
		IFS=$','

		for handle_desc in ${HANDLES}; do

			#handle_desc="$(sed s/^[^a-zA-Z]*// <<< $handle_desc)"

			# get the handle number (0x000#)
			# -B 5 is defined because sometimes there's some extra
			# information between the Handle_nr and the description.
#			handle_nr="$(grep -in ${handle_desc} ${dmi_info} -B 5 | \
#			             grep -Eo '0x[0-9]{4}')"
#			this="$(grep -in "Handle ${handle_nr}" ${dmi_info}  | \
#			        awk -F: {'print $1'})"
#			next="$(grep -n 'Handle' ${dmi_info} | grep -A 1 ${handle_nr} | \
#			        awk -F: {'print $1'} | sed -n "2{p;q;}")"
#			((this++))
#			((next--)) # this prevents the 'handle' lines from printing
#
#			# use a temp file to store handle information
#
#			sed -n "$this,$next{p;}" ${dmi_info} > ${dmi_tmp}
#			#cat $dmi_tmp

			# extract the handle and string the first line
			# (%node% identifier that is useless here)
			extr_node ${handle_desc} ${dmi_info} Handle | \
				sed -n "2,\${p;}" > ${dmi_tmp}

			# because sometimes there's some extra info, head -n 5
			# TODO: combine grep and sed
			local handleID="$(head -n 5 ${dmi_tmp} | grep -i ${handle_desc} | \
				sed 's/^[^a-zA-Z]//')"

			# here the data is processed
			case $handleID in
				"System Information")

					add_header  "System info"

					add_attribute 'Manufacturer' \
					              'system_manufacturer'
					add_values    "$(grep -i manufacturer ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Model'	'system_model'
					add_values    "$(grep -i product ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Version number'
					add_values    "$(grep -i version ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'OEM serial number' \
					              'computer_product_serial'
					add_values    "$(grep -i serial ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'UUID' 	'uuid'
					add_values    "$(grep -i uuid ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"

					add_footer
					;;

				"Base Board Information")

					add_header    "Motherboard"

					add_attribute 'Manufacturer' \
					              'mother_board_manufacturer'
					add_values    "$(grep -i manufacturer ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Model' \
					              'mother_board_model'
					add_values    "$(grep -i product ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Version' \
					              'mother_board_version'
					add_values    "$(grep -i version ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Serial number' \
					              'mother_board_serial_number'
					add_values    "$(grep -i serial ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"

					add_footer
					;;

				"BIOS Information")

					add_header    "BIOS"

					add_attribute 'Vendor'
					add_values    "$(grep -i vendor ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Revision'	'bios_version'
					add_values    "$(grep -i version ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Date'	'bios_date'
					add_values    "$(grep -i date ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Serial number'	'bios_serial_number'
					add_values    "$(grep -i serial ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"

					add_footer
					;;


				"Chassis Information")	# Chassis Information

					add_header    'Chassis'

					add_attribute 'Manufacturer' 	'chassis_manufacturer'
					add_values    "$(grep -i manufacturer ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Type' 	'chassis_type'
					add_values    "$(grep -i type ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Version' 	'chassis_version'
					add_values    "$(grep -i version ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Serial number' \
					              'chassis_serial_number'
					add_values    "$(grep -i serial ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"


					add_attribute 'Lock' 	'chassis_lock'
					add_values    "$(grep -i lock ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"

					add_attribute 'Asset tag' 'chassis_asset_tag'
					add_values    "$(grep -i asset ${dmi_tmp} | \
					                 awk -F':' {'print $2'} | \
					                 sed 's/^\ *//')"

					add_footer
					;;

			esac

		done

		IFS="$IFS_bak"

	fi
	flush_values
}

